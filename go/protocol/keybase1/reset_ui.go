// Auto-generated by avdl-compiler v1.3.29 (https://github.com/keybase/node-avdl-compiler)
//   Input file: avdl/keybase1/reset_ui.avdl

package keybase1

import (
	"github.com/keybase/go-framed-msgpack-rpc/rpc"
	context "golang.org/x/net/context"
)

type ResetPromptResult int

const (
	ResetPromptResult_IGNORE ResetPromptResult = 0
	ResetPromptResult_CANCEL ResetPromptResult = 1
	ResetPromptResult_RESET  ResetPromptResult = 2
)

func (o ResetPromptResult) DeepCopy() ResetPromptResult { return o }

var ResetPromptResultMap = map[string]ResetPromptResult{
	"IGNORE": 0,
	"CANCEL": 1,
	"RESET":  2,
}

var ResetPromptResultRevMap = map[ResetPromptResult]string{
	0: "IGNORE",
	1: "CANCEL",
	2: "RESET",
}

func (e ResetPromptResult) String() string {
	if v, ok := ResetPromptResultRevMap[e]; ok {
		return v
	}
	return ""
}

type ResetPromptArg struct {
	SessionID int    `codec:"sessionID" json:"sessionID"`
	Text      string `codec:"text" json:"text"`
	Reset     bool   `codec:"reset" json:"reset"`
}

type ResetUIInterface interface {
	// ResetPrompt asks user whether they would like to confirm an action
	// in the autoreset process.
	ResetPrompt(context.Context, ResetPromptArg) (ResetPromptResult, error)
}

func ResetUIProtocol(i ResetUIInterface) rpc.Protocol {
	return rpc.Protocol{
		Name: "keybase.1.resetUI",
		Methods: map[string]rpc.ServeHandlerDescription{
			"resetPrompt": {
				MakeArg: func() interface{} {
					var ret [1]ResetPromptArg
					return &ret
				},
				Handler: func(ctx context.Context, args interface{}) (ret interface{}, err error) {
					typedArgs, ok := args.(*[1]ResetPromptArg)
					if !ok {
						err = rpc.NewTypeError((*[1]ResetPromptArg)(nil), args)
						return
					}
					ret, err = i.ResetPrompt(ctx, typedArgs[0])
					return
				},
			},
		},
	}
}

type ResetUIClient struct {
	Cli rpc.GenericClient
}

// ResetPrompt asks user whether they would like to confirm an action
// in the autoreset process.
func (c ResetUIClient) ResetPrompt(ctx context.Context, __arg ResetPromptArg) (res ResetPromptResult, err error) {
	err = c.Cli.Call(ctx, "keybase.1.resetUI.resetPrompt", []interface{}{__arg}, &res)
	return
}
